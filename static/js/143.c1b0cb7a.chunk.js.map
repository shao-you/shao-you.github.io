{"version":3,"file":"static/js/143.c1b0cb7a.chunk.js","mappings":"kRASMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgDD,OAhDCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAcF,WAEI,MAAkFC,KAAKC,MAA/EC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,kBAAmBC,EAA7C,EAA6CA,eAAgBC,EAA7D,EAA6DA,iBAC7D,OACI,iBAAKC,MAAO,CAACC,OAAQ,MAAOC,MAAO,QAAnC,WACI,4BACI,SAAC,IAAD,CACIC,MAAOR,EACPS,YAAY,YACZJ,MAAO,CAACK,MAAO,OAAQC,SAAU,QAASC,YAAa,OACvDC,SAAUX,KAEd,SAAC,IAAD,CAAQY,KAAK,UAAUC,QAASZ,EAAhC,qBAEJ,SAAC,KAAD,CACIE,MAAO,CAACW,UAAW,OAAQN,MAAO,OAAQC,SAAU,QAASM,WAAY,SACzEC,UAAQ,EACRC,WAAYlB,EACZmB,WAAY,SAACC,EAAMC,GAAP,OACR,SAAC,UAAD,CAAWC,OAAO,SAAC,IAAD,CACET,KAAK,UACLU,QAAM,EAACC,KAAM,QACbpB,MAAO,CAACqB,WAAY,QACpBX,QAAS,WAAOX,EAAiBkB,IAJnC,iBAAlB,SAMKD,YAMxB,+BACD,gBAEC,EAhDCxB,CAAiB8B,EAAAA,WA4DvB9B,EAAS+B,aAAe,CACpBC,QAAS,KAGb,IAuBA,GAAeC,EAAAA,EAAAA,KAvBE,SAACC,GACd,MAAO,CACH/B,WAAY+B,EAAMC,IAAI,QAAQA,IAAI,cAClC/B,KAAM8B,EAAMC,IAAI,QAAQA,IAAI,YAGhB,SAACC,GACjB,MAAO,CACHC,kBADG,SACeL,GACdI,EAASE,EAAAA,GAAAA,YAA2BN,KAExC3B,kBAJG,SAIekC,GACdH,EAASE,EAAAA,GAAAA,qBAAoCC,EAAEC,OAAO7B,SAE1DL,eAPG,WAQC8B,EAASE,EAAAA,GAAAA,qBAEb/B,iBAVG,SAUckB,GACbW,EAASE,EAAAA,GAAAA,oBAAmCb,QAKxD,CAA8CzB,G,UCzE9C,GAAeiC,EAAAA,EAAAA,KATS,SAACC,GACrB,MAAO,MAGgB,SAACE,GACxB,MAAO,KAIX,EAhBa,WACT,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GAER,OACI,SAAC,EAAD,CAAUT,QAASS","sources":["pages/demo/TodoList.js","pages/demo/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\n// import 'antd/dist/antd.css'\r\nimport 'antd/dist/antd.min.css'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from './store'\r\nimport { Input, Button, List } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport store from '../../store'\r\n\r\nclass TodoList extends Component {\r\n    // state = store.getState()\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     // console.log(nextState.get('demo').get('inputValue'))\r\n    //     // console.log(this.props.inputValue)\r\n    //     if (nextState.get('demo') !== this.props) {\r\n    //         console.log(this.state.get('demo').get('list'))\r\n    //         console.log(store.getState().get('demo').get('list'))\r\n    //         return true\r\n    //     } else {\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        const { inputValue, list, handleInputChange, handleBtnClick, handleItemDelete } = this.props\r\n        return (\r\n            <div style={{margin: '7px', float: 'left'}}>\r\n                <div>\r\n                    <Input \r\n                        value={inputValue} \r\n                        placeholder='ToDo List' \r\n                        style={{width: '75vw', maxWidth: '300px', marginRight: '5px'}}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Button type=\"primary\" onClick={handleBtnClick}>Add</Button>\r\n                </div>\r\n                <List \r\n                    style={{marginTop: '10px', width: '75vw', maxWidth: '300px', background: 'white'}}\r\n                    bordered\r\n                    dataSource={list}\r\n                    renderItem={(item, index) => (\r\n                        <List.Item extra={<Button \r\n                                            type=\"primary\" \r\n                                            danger size={'small'} \r\n                                            style={{marginLeft: 'auto'}}\r\n                                            onClick={() => {handleItemDelete(index)}}>Del{/* onClick registered an \"arrow function\" */}\r\n                                         </Button>}>\r\n                            {item}\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // this.props.handleStoreChange(this.props.urlPara)\r\n    }\r\n}\r\n\r\nTodoList.propTypes = {\r\n    inputValue: PropTypes.string.isRequired,\r\n    list: PropTypes.object.isRequired,\r\n    urlPara: PropTypes.string,\r\n    handleStoreChange: PropTypes.func.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    handleBtnClick: PropTypes.func.isRequired,\r\n    handleItemDelete: PropTypes.func.isRequired\r\n}\r\nTodoList.defaultProps = {\r\n    urlPara: '0'\r\n}\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        inputValue: state.get('demo').get('inputValue'),\r\n        list: state.get('demo').get('list')\r\n    }\r\n}\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        handleStoreChange(urlPara) {\r\n            dispatch(actionCreators.getTodoList(urlPara))\r\n        },\r\n        handleInputChange(e) {\r\n            dispatch(actionCreators.getInputChangeAction(e.target.value))\r\n        },\r\n        handleBtnClick() {\r\n            dispatch(actionCreators.getAddItemAction())\r\n        },\r\n        handleItemDelete(index) {\r\n            dispatch(actionCreators.getDeleteItemAction(index))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(TodoList)","import React, { Component } from 'react'\r\nimport TodoList from './TodoList'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from './store'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// stateless function component\r\nconst Demo = () => {\r\n    const { id } = useParams() // React Hooks \"useParams\" must be called in a React function component \r\n    // console.log(id)\r\n    return (\r\n        <TodoList urlPara={id}/> // id is url parameter, type string\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo)\r\n"],"names":["TodoList","this","props","inputValue","list","handleInputChange","handleBtnClick","handleItemDelete","style","margin","float","value","placeholder","width","maxWidth","marginRight","onChange","type","onClick","marginTop","background","bordered","dataSource","renderItem","item","index","extra","danger","size","marginLeft","Component","defaultProps","urlPara","connect","state","get","dispatch","handleStoreChange","actionCreators","e","target","id","useParams"],"sourceRoot":""}