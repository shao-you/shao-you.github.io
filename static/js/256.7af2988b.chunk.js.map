{"version":3,"file":"static/js/256.7af2988b.chunk.js","mappings":"gNAEaA,E,QAAcC,GAAAA,IAAH,gJ,6ECUlBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgDD,OAhDCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAcF,WAEI,MAAkFC,KAAKC,MAA/EC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,kBAAmBC,EAA7C,EAA6CA,eAAgBC,EAA7D,EAA6DA,iBAC7D,OACI,UAACT,EAAD,YACI,4BACI,SAAC,IAAD,CACIU,MAAOL,EACPM,YAAY,YACZC,MAAO,CAACC,MAAO,OAAQC,SAAU,QAASC,YAAa,OACvDC,SAAUT,KAEd,SAAC,IAAD,CAAQU,KAAK,UAAUC,QAASV,EAAhC,qBAEJ,SAAC,KAAD,CACII,MAAO,CAACO,UAAW,OAAQN,MAAO,OAAQC,SAAU,QAASM,WAAY,SACzEC,UAAQ,EACRC,WAAYhB,EACZiB,WAAY,SAACC,EAAMC,GAAP,OACR,SAAC,UAAD,CAAWC,OAAO,SAAC,IAAD,CACET,KAAK,UACLU,QAAM,EAACC,KAAM,QACbhB,MAAO,CAACiB,WAAY,QACpBX,QAAS,WAAOT,EAAiBgB,IAJnC,iBAAlB,SAMKD,YAMxB,+BACD,gBAEC,EAhDCtB,CAAiB4B,EAAAA,eA4DvB5B,EAAS6B,aAAe,CACpBC,QAAS,KAGb,IAuBA,GAAeC,EAAAA,EAAAA,KAvBE,SAACC,GACd,MAAO,CACH7B,WAAY6B,EAAMC,IAAI,QAAQA,IAAI,cAClC7B,KAAM4B,EAAMC,IAAI,QAAQA,IAAI,YAGhB,SAACC,GACjB,MAAO,CACHC,kBADG,SACeL,GACdI,EAASE,EAAAA,GAAAA,YAA2BN,KAExCzB,kBAJG,SAIegC,GACdH,EAASE,EAAAA,GAAAA,qBAAoCC,EAAEC,OAAO9B,SAE1DF,eAPG,WAQC4B,EAASE,EAAAA,GAAAA,qBAEb7B,iBAVG,SAUcgB,GACbW,EAASE,EAAAA,GAAAA,oBAAmCb,QAKxD,CAA8CvB,G,UC5E9C,GAAe+B,EAAAA,EAAAA,KATS,SAACC,GACrB,MAAO,MAGgB,SAACE,GACxB,MAAO,KAIX,EAhBa,WACT,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GAER,OACI,SAAC,EAAD,CAAUT,QAASS","sources":["pages/demo/style.js","pages/demo/TodoList.js","pages/demo/index.js"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const DemoWrapper = styled.div`\r\n    margin: 0 0 0 10px;\r\n    padding-top: 55px;\r\n    font-family: Garamond,Georgia,Arial,sans-serif;\r\n    width: 90vw;\r\n`","import React, { PureComponent } from 'react'\r\nimport {\r\n    DemoWrapper\r\n} from './style'\r\n// import 'antd/dist/antd.css'\r\nimport 'antd/dist/antd.min.css'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from './store'\r\nimport { Input, Button, List } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport store from '../../store'\r\n\r\nclass TodoList extends PureComponent {\r\n    // state = store.getState()\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     // console.log(nextState.get('demo').get('inputValue'))\r\n    //     // console.log(this.props.inputValue)\r\n    //     if (nextState.get('demo') !== this.props) {\r\n    //         console.log(this.state.get('demo').get('list'))\r\n    //         console.log(store.getState().get('demo').get('list'))\r\n    //         return true\r\n    //     } else {\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        const { inputValue, list, handleInputChange, handleBtnClick, handleItemDelete } = this.props\r\n        return (\r\n            <DemoWrapper>\r\n                <div>\r\n                    <Input \r\n                        value={inputValue} \r\n                        placeholder='ToDo List' \r\n                        style={{width: '75vw', maxWidth: '300px', marginRight: '5px'}}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Button type=\"primary\" onClick={handleBtnClick}>Add</Button>\r\n                </div>\r\n                <List \r\n                    style={{marginTop: '10px', width: '75vw', maxWidth: '300px', background: 'white'}}\r\n                    bordered\r\n                    dataSource={list}\r\n                    renderItem={(item, index) => (\r\n                        <List.Item extra={<Button \r\n                                            type=\"primary\" \r\n                                            danger size={'small'} \r\n                                            style={{marginLeft: 'auto'}}\r\n                                            onClick={() => {handleItemDelete(index)}}>Del{/* onClick registered an \"arrow function\" */}\r\n                                         </Button>}>\r\n                            {item}\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </DemoWrapper>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // this.props.handleStoreChange(this.props.urlPara)\r\n    }\r\n}\r\n\r\nTodoList.propTypes = {\r\n    inputValue: PropTypes.string.isRequired,\r\n    list: PropTypes.object.isRequired,\r\n    urlPara: PropTypes.string,\r\n    handleStoreChange: PropTypes.func.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    handleBtnClick: PropTypes.func.isRequired,\r\n    handleItemDelete: PropTypes.func.isRequired\r\n}\r\nTodoList.defaultProps = {\r\n    urlPara: '0'\r\n}\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        inputValue: state.get('demo').get('inputValue'),\r\n        list: state.get('demo').get('list')\r\n    }\r\n}\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        handleStoreChange(urlPara) {\r\n            dispatch(actionCreators.getTodoList(urlPara))\r\n        },\r\n        handleInputChange(e) {\r\n            dispatch(actionCreators.getInputChangeAction(e.target.value))\r\n        },\r\n        handleBtnClick() {\r\n            dispatch(actionCreators.getAddItemAction())\r\n        },\r\n        handleItemDelete(index) {\r\n            dispatch(actionCreators.getDeleteItemAction(index))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(TodoList)","import React, { PureComponent } from 'react'\r\nimport TodoList from './TodoList'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from './store'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// stateless function component\r\nconst Demo = () => {\r\n    const { id } = useParams() // React Hooks \"useParams\" must be called in a React function component \r\n    // console.log(id)\r\n    return (\r\n        <TodoList urlPara={id}/> // id is url parameter, type string\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo)\r\n"],"names":["DemoWrapper","styled","TodoList","this","props","inputValue","list","handleInputChange","handleBtnClick","handleItemDelete","value","placeholder","style","width","maxWidth","marginRight","onChange","type","onClick","marginTop","background","bordered","dataSource","renderItem","item","index","extra","danger","size","marginLeft","PureComponent","defaultProps","urlPara","connect","state","get","dispatch","handleStoreChange","actionCreators","e","target","id","useParams"],"sourceRoot":""}